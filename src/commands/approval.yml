description: Send a notification that a manual approval job is ready

parameters:
  oauth_token:
    type: string
    default: ${SLACK_OAUTH_TOKEN}
    description: >
      Enter either your 'Bot User OAuth Access Token' from Slack. The token should be available at https://api.slack.com/apps/A01AW6YH22J/oauth? or use the CircleCI UI to add your token under the 'SLACK_OAUTH_TOKEN' env var. Typically 'xoxb-##########-#############-************************'

  message:
    description: Enter custom message.
    type: string
    default: A workflow in CircleCI is awaiting your approval.

  color:
    description: Hex color value for notification attachment color.
    type: string
    default: "#3AA3E3"

  mentions:
    description: A comma separated list of user IDs. No spaces.
    type: string
    default: ""

  include_project_field:
    type: boolean
    default: true
    description: >
      Whether or not to include the Project field in the message

  include_job_number_field:
    type: boolean
    default: true
    description: >
      Whether or not to include the Job Number field in the message

  url:
    description: The URL to link back to.
    type: string
    default: https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}

  channel:
    type: string
    default: '#general'
    description: >
      Defaults to #general best to set this to a channel that does not have the entire org

steps:
  - run:
      name: Provide error if non-bash shell
      command: |
        if [ ! -x /bin/bash ]; then
          echo Bash not installed.
          exit 1
        fi

  - run:
      name: Provide error if cURL is not installed.
      command: |
        which curl > curl_exists; echo $? | grep -q '1' && echo curl not installed && rm curl_exists && exit 1
        rm curl_exists

  - run:
      name: Slack - Sending Approval Notification
      shell: /bin/bash
      command: |
        # Provide error if no webhook is set and error. Otherwise continue
        if [ -z "<< parameters.oauth_token >>" ]; then
          echo "NO SLACK OAuth Token SET"
          echo "Please input your SLACK_OAUTH_TOKEN value either in the settings for this project, or as a parameter for this orb."
          exit 1
        else
          #Create Members string
          if [ -n "<< parameters.mentions >>" ]; then
            IFS="," read -ra SLACK_MEMBERS \<<< "<< parameters.mentions >>"
            for i in "${SLACK_MEMBERS[@]}"; do
              if [ $(echo ${i} | head -c 1) == "S" ]; then
                SLACK_MENTIONS="${SLACK_MENTIONS}<!subteam^${i}> "
              elif echo ${i} | grep -E "^(here|channel|everyone)$" > /dev/null; then
                SLACK_MENTIONS="${SLACK_MENTIONS}<!${i}> "
              else
                SLACK_MENTIONS="${SLACK_MENTIONS}<@${i}> "
              fi
            done
          fi

          curl -X POST -H 'Content-type: application/json' \
            -H 'Authorization: Bearer << parameters.oauth_token >>' \
            --data \
            "{ \
              <<# parameters.channel >>
              \"channel\": \"<< parameters.channel >>\", \
              <</ parameters.channel >>
              \"attachments\": [ \
                { \
                  \"fallback\": \"<< parameters.message >> - << parameters.url >>\", \
                  \"text\": \"<< parameters.message >> $SLACK_MENTIONS\", \
                  \"fields\": [ \
                    <<# parameters.include_project_field >>
                    { \
                      \"title\": \"Project\", \
                      \"value\": \"$CIRCLE_PROJECT_REPONAME\", \
                      \"short\": true \
                    }, \
                    <</ parameters.include_project_field >>
                    <<# parameters.include_job_number_field >>
                    { \
                      \"title\": \"Job Number\", \
                      \"value\": \"$CIRCLE_BUILD_NUM\", \
                      \"short\": true \
                    } \
                    <</ parameters.include_job_number_field >>
                  ], \
                  \"actions\": [ \
                    { \
                      \"type\": \"button\", \
                      \"text\": \"Visit Workflow\", \
                      \"url\": \"<< parameters.url >>\" \
                    } \
                  ], \
                  \"color\": \"<< parameters.color >>\" \
                } \
              ] \
            }" 'https://slack.com/api/chat.postMessage'
          echo "Awaiting approval notified."
        fi
