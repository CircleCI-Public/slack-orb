description: |
  Notify a Slack channel with a custom message.
  The environment variables SLACK_ACCESS_TOKEN and SLACK_DEFAULT_CHANNEL must be set for this orb to work.
  For instructions on how to set them, follow the setup guide available in the wiki: https://github.com/CircleCI-Public/slack-orb/wiki/Setup.

parameters:
  template:
    description: |
      Select which template to use for the notification by its name. The name must be available as an environment variable.
      The built-in templates can be found and previewed at: https://github.com/CircleCI-Public/slack-orb/wiki#templates.
      Alternatively, you can create and use your own dynamic templates: https://github.com/CircleCI-Public/slack-orb/wiki/Dynamic-Templates.
      If left empty and no custom template is provided, the template will be automatically selected based on the job status.
    type: string
    default: ""
  custom:
    description: |
      Enter a custom message template.

      1. Create your message template using the Block Kit Builder: https://app.slack.com/block-kit-builder/.
      2. Insert any desired environment variables.
      3. Paste value here.
    type: string
    default: ""
  event:
    description: |
      In what event should this message send? Options: ["fail", "pass", "always"]
    type: enum
    enum: ["fail", "pass", "always"]
    default: "always"
  branch_pattern:
    description: |
      A comma separated list of regex matchable branch names. Notifications will only be sent if sent from a job from these branches. By default ".+" will be used to match all branches. Pattern must match the full string, no partial matches.
    type: string
    default: ".+"
  tag_pattern:
    description: |
      A comma separated list of regex matchable tag names. Notifications will only be sent if sent from a job from these branches. By default ".+" will be used to match all tags. Pattern must match the full string, no partial matches.
    type: string
    default: ".+"
  mentions:
    description: |
      Exports to the "$SLACK_PARAM_MENTIONS" environment variable for use in templates.
      Mention users via the @ symbol: "@USER"
      If the username contains a space, the Slack ID must be used with angled brackets: "<@U8XXXXXXX>"
    type: string
    default: ""
  channel:
    description: |
      Select which channel in which to post to. Channel name or ID will work. You may include a comma separated list of channels if you wish to post to multiple channels at once. Set the "SLACK_DEFAULT_CHANNEL" environment variable for the default channel.
    type: string
    default: $SLACK_DEFAULT_CHANNEL
  ignore_errors:
      description: |
        Ignore errors posting to Slack.
        Disable to catch initial setup errors. Re-enable to prevent Slack errors from affecting your pipeline.
      type: boolean
      default: true
  debug:
      description: |
       View payload and response being sent to slack api.
       Enable to view full payload being sent to slack and response being recieved from the API call.
      type: boolean
      default: false
steps:
  - run:
      when: on_fail
      name: Slack - Detecting Job Status (FAIL)
      command: |
        echo 'export CCI_STATUS="fail"' > /tmp/SLACK_JOB_STATUS
  - run:
      when: on_success
      name: Slack - Detecting Job Status (PASS)
      command: |
        echo 'export CCI_STATUS="pass"' > /tmp/SLACK_JOB_STATUS
  - run:
      when: always
      name: Slack - Sending Notification
      environment:
        SLACK_PARAM_EVENT: "<<parameters.event>>"
        SLACK_PARAM_TEMPLATE: "<<parameters.template>>"
        SLACK_PARAM_CUSTOM: "<<parameters.custom>>"
        SLACK_PARAM_MENTIONS: "<<parameters.mentions>>"
        SLACK_PARAM_BRANCHPATTERN: "<<parameters.branch_pattern>>"
        SLACK_PARAM_TAGPATTERN: "<<parameters.tag_pattern>>"
        SLACK_PARAM_CHANNEL: "<<parameters.channel>>"
        SLACK_PARAM_IGNORE_ERRORS: "<<parameters.ignore_errors>>"
        SLACK_PARAM_DEBUG: "<<parameters.debug>>"
        # import pre-built templates using the orb-pack local script include.
        basic_fail_1: "<<include(message_templates/basic_fail_1.json)>>"
        success_tagged_deploy_1: "<<include(message_templates/success_tagged_deploy_1.json)>>"
        basic_on_hold_1: "<<include(message_templates/basic_on_hold_1.json)>>"
        basic_success_1: "<<include(message_templates/basic_success_1.json)>>"
      command: <<include(scripts/notify.sh)>>
